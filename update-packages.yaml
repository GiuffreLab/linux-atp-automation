---
- name: Perform updates to all lab nodes
  hosts: all
  gather_facts: false

  tasks:
    - name: Upgrade distribution and clean / remove unused packages / dependencies
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600
        upgrade: true
        autoclean: true
        autoremove: true
      when: ansible_facts['os_family'] == 'Debian'

    - name: Update all packages (RHEL/CentOS)
      ansible.builtin.yum:
        name: '*'
        state: latest
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Check for the presence of /var/run/reboot-required (Debian/Ubuntu)
      ansible.builtin.stat:
        path: /var/run/reboot-required
      register: reboot_required_file
      when: ansible_facts['os_family'] == 'Debian'

    - name: Set default value for reboot_required_file (Debian/Ubuntu)
      ansible.builtin.set_fact:
        reboot_required_file: { "stat": { "exists": false } }
      when: ansible_facts['os_family'] != 'Debian'

    - name: Check if a reboot is required (RHEL/CentOS)
      ansible.builtin.command:
        cmd: needs-restarting -r
      register: needs_reboot
      ignore_errors: true
      changed_when: false
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Set default value for needs_reboot (RHEL/CentOS)
      ansible.builtin.set_fact:
        needs_reboot: { "rc": 0 }
      when: ansible_facts['os_family'] != 'RedHat'

    - name: Determine if a reboot is required (Debian/Ubuntu)
      ansible.builtin.set_fact:
        reboot_required: true
      when: reboot_required_file.stat.exists

    - name: Determine if a reboot is required (RHEL/CentOS)
      ansible.builtin.set_fact:
        reboot_required: true
      when: needs_reboot.rc == 1

    - name: Debug if a reboot is required
      ansible.builtin.debug:
        msg: "A reboot is required"
      when: reboot_required | default(false)

    - name: Debug if a reboot is not required
      ansible.builtin.debug:
        msg: "A reboot is NOT required"
      when: not reboot_required | default(false)

    - name: Compile list of currently logged in users
      ansible.builtin.command:
        cmd: w
      register: users_status

    - name: Schedule reboot in 5 minutes for servers requiring reboot
      ansible.builtin.reboot:
        msg: "ATTENTION: this machine will reboot in 5 minutes to apply updates!"
        pre_reboot_delay: 360
        reboot_timeout: 600
      when: reboot_required | default(false)

