---
- name: Roll Back Proxmox VM to a Snapshot
  hosts: "{{ host_name }}"
  gather_facts: false
  tasks:
    - name: Install python3-venv package
      apt:
        name: python3-venv
        state: present
      become: yes

    - name: Create a virtual environment
      command: "python3 -m venv /proxmoxer"
      args:
        creates: "/proxmoxer"

    - name: Install required Python packages
      command: "/proxmoxer/bin/pip install proxmoxer requests"
      args:
        creates: "/proxmoxer/lib/python3.X/site-packages/proxmoxer"

    - name: Stop the VM using shell command
      shell: "qm stop {{ vmid }}"
      register: stop_result

    - name: Check if VM is stopped
      assert:
        that:
          - stop_result.rc == 0
        fail_msg: "Stopping the VM failed. Cannot proceed with the rollback."
        success_msg: "VM stopped successfully. Proceeding with the rollback."

    - name: Roll back to snapshot using virtual environment
      community.general.proxmox_snap:
        api_host: "{{ api_host }}"
        api_user: "{{ api_user }}"
        api_password: "{{ api_password }}"
        vmid: "{{ vmid }}"
        snapname: "{{ snapshot_name }}"
        state: rollback
      register: rollback_result
      when: stop_result.rc == 0
      environment:
        PATH: "/proxmoxer/bin:{{ ansible_env.PATH }}"  # Adding the virtual env to the PATH

    - name: Print rollback result
      ansible.builtin.debug:
        var: rollback_result

    - name: Start the VM using shell command
      shell: "qm start {{ vmid }}"
      register: start_result
      when: rollback_result is success

    - name: Confirm if VM is started
      assert:
        that:
          - start_result.rc == 0
        fail_msg: "Starting the VM failed after the rollback."
        success_msg: "VM started successfully after the rollback."
