---
- name: Check if a reboot is required on a Linux server
  hosts: all
  gather_facts: true

  tasks:
    - name: Get current kernel version
      ansible.builtin.command:
        cmd: uname -r
      register: current_kernel

    - name: Get latest installed kernel version (RHEL)
      ansible.builtin.command:
        cmd: rpm -q --last kernel | head -n 1 | awk '{print $1}'
      register: latest_kernel
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Get latest installed kernel version (Debian/Ubuntu)
      ansible.builtin.shell: "dpkg -l 'linux-image-*' | grep '^ii' | awk '{print $3}' | sort -V | tail -n 1"
      register: latest_kernel
      when: ansible_facts['os_family'] == 'Debian'

    - name: Debug current kernel and latest installed kernel (Debian/Ubuntu)
      ansible.builtin.debug:
        msg: "Current kernel: {{ current_kernel.stdout.strip() }}, Latest installed kernel: {{ latest_kernel.stdout.strip() }}"
      when: ansible_facts['os_family'] == 'Debian'

    - name: Debug current kernel and latest installed kernel (RHEL)
      ansible.builtin.debug:
        msg: "Current kernel: {{ current_kernel.stdout.strip() }}, Latest installed kernel: {{ latest_kernel.stdout.strip() }}"
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Set fact if reboot is required
      set_fact:
        reboot_required: true
      when: (ansible_facts['os_family'] == 'Debian' and current_kernel.stdout.strip() != latest_kernel.stdout.strip()) or (ansible_facts['os_family'] == 'RedHat' and current_kernel.stdout.strip() != latest_kernel.stdout.strip())

    - name: Determine if reboot is required due to kernel version mismatch
      ansible.builtin.debug:
        msg: "A reboot is required due to kernel version mismatch"
      when: (ansible_facts['os_family'] == 'Debian' and current_kernel.stdout.strip() != latest_kernel.stdout.strip()) or (ansible_facts['os_family'] == 'RedHat' and current_kernel.stdout.strip() != latest_kernel.stdout.strip())

    - name: Determine if reboot is not required
      ansible.builtin.debug:
        msg: "A reboot is NOT required"
      when: (ansible_facts['os_family'] == 'Debian' and current_kernel.stdout.strip() == latest_kernel.stdout.strip()) or (ansible_facts['os_family'] == 'RedHat' and current_kernel.stdout.strip() == latest_kernel.stdout.strip())

    - name: Compile List of currently logged in users
      ansible.builtin.command:
        cmd: w
      register: users_status

    - name: Schedule reboot in 5 minutes for servers requiring reboot
      ansible.builtin.reboot:
        msg: "ATTENTION: this machine will reboot in 5 minutes to apply updates!"
        pre_reboot_delay: 30
        reboot_timeout: 600
      become: true
      when: reboot_required | default(false)
