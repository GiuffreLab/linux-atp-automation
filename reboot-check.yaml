---
- name: Check if a reboot is required on a Linux server
  hosts: all
  gather_facts: true

  tasks:
    - name: Set reboot_required_file_path based on OS
      set_fact:
        reboot_required_file_path: "{{ '/var/run/reboot-required' if ansible_facts['os_family'] == 'Debian' else '/run/reboot-required' }}"
      when: ansible_facts['os_family'] in ['RedHat', 'Debian']

    - name: Check for reboot-required file
      ansible.builtin.stat:
        path: "{{ reboot_required_file_path }}"
      register: reboot_required_file

    - name: Check latest installed kernel version (RHEL)
      ansible.builtin.command:
        cmd: rpm -q --last kernel | head -n 1 | awk '{print $1}'
      register: latest_kernel
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Check latest installed kernel version (Debian/Ubuntu)
      ansible.builtin.shell: "dpkg -l 'linux-image-*' | grep '^ii' | awk '{print $3}' | sort -V | tail -n 1"
      register: latest_kernel
      when: ansible_facts['os_family'] == 'Debian'

    - name: Set fact if reboot is required
      set_fact:
        reboot_required: true
      when: reboot_required_file.stat.exists or (ansible_facts['os_family'] == 'Debian' and ansible_kernel.split('-')[0] != latest_kernel.stdout.split('-')[0]) or (ansible_facts['os_family'] == 'RedHat' and ansible_kernel != latest_kernel.stdout.strip())

    - name: Determine if reboot is required due to reboot-required file
      ansible.builtin.debug:
        msg: "A reboot is required due to the presence of {{ reboot_required_file_path }} file"
      when: reboot_required_file.stat.exists

    - name: Determine if reboot is required due to kernel version mismatch
      ansible.builtin.debug:
        msg: "A reboot is required due to kernel version mismatch"
      when: (ansible_facts['os_family'] == 'Debian' and ansible_kernel.split('-')[0] != latest_kernel.stdout.split('-')[0]) or (ansible_facts['os_family'] == 'RedHat' and ansible_kernel != latest_kernel.stdout.strip())

    - name: Determine if reboot is not required
      ansible.builtin.debug:
        msg: "A reboot is NOT required"
      when: not reboot_required_file.stat.exists and ((ansible_facts['os_family'] == 'Debian' and ansible_kernel.split('-')[0] == latest_kernel.stdout.split('-')[0]) or (ansible_facts['os_family'] == 'RedHat' and ansible_kernel == latest_kernel.stdout.strip()))

    - name: Compile List of currently logged in users
      ansible.builtin.command:
        cmd: w
      register: users_status

    - name: Schedule reboot in 5 minutes for servers requiring reboot
      ansible.builtin.reboot:
        msg: "ATTENTION: this machine will reboot in 5 minutes to apply updates!"
        pre_reboot_delay: 30
        reboot_timeout: 600
      become: true
      when: reboot_required | default(false)
